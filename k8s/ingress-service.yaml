apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: live-retro-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/websocket-services: "server-service"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$request_uri"
spec:
  ingressClassName: nginx
  rules:
  - host: live-retro.example.com  # Replace with your domain
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: server-service
            port:
              number: 8080
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: server-service
            port:
              number: 8080
      - path: /
        pathType: Prefix
        backend:
          service:
            name: client-service
            port:
              number: 3000

---
# For AWS Application Load Balancer
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: live-retro-alb
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
spec:
  rules:
  - host: live-retro.example.com  # Replace with your domain
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: server-service
            port:
              number: 8080
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: server-service
            port:
              number: 8080
      - path: /
        pathType: Prefix
        backend:
          service:
            name: client-service
            port:
              number: 3000